// Step 1: Parse Rows with Initial Data
ClearCollect(
    colFlatRows,
    ForAll(
        Filter(
            Split(terraformFile, "# --------------------------------------------------------- #"),
            Len(Trim(ThisRecord.Value)) > 0 // Exclude empty sections
        ) As sections,
        ForAll(
            Filter(
                Split(sections.Value, Char(10)),
                Len(Trim(Value)) > 0 // Exclude empty lines
            ) As Line,
            With(
                {
                    indentLevel: Len(Line.Value) - Len(Trim(Line.Value)), // Calculate indentation
                    key: If(
                        " = " in Line.Value,
                        Trim(First(Split(Line.Value, " = ")).Value),
                        Blank()
                    ),
                    value: If(
                        " = " in Line.Value,
                        Trim(Last(Split(Line.Value, " = ")).Value),
                        Blank()
                    ),
                    isObject: "object(" in Line.Value,
                    isMap: "map(" in Line.Value,
                    isOptional: "optional(" in Line.Value,
                    detectedWrapper: If(
                        "object(" in Line.Value,
                        "object",
                        If(
                            "map(" in Line.Value,
                            "map",
                            If("optional(" in Line.Value, "optional", Blank())
                        )
                    )
                },
                {
                    sectionName: Text(
                        Mid(
                            sections.Value,
                            Find("""", sections.Value) + 1,
                            Find("""", Mid(sections.Value, Find("""", sections.Value) + 1)) - 1
                        )
                    ),
                    indentLevel: indentLevel,
                    key: key,
                    value: value,
                    detectedWrapper: detectedWrapper
                }
            )
        )
    )
);

// Step 2: Assign Parent Wrappers
ForAll(
    colFlatRows As topRow,
    Collect(
        colParsedRows,
        ForAll(
            topRow.Value As innerRow,
            With(
                {
                    // Calculate the indentation level
                    indentLevel: Len(innerRow.value) - Len(Trim(innerRow.value)),

                    // Extract key and value
                    key: If(
                        " = " in innerRow.value,
                        Trim(First(Split(innerRow.value, " = ")).Value),
                        Blank()
                    ),
                    value: If(
                        " = " in innerRow.value,
                        Trim(Last(Split(innerRow.value, " = ")).Value),
                        Blank()
                    ),

                    // Detect wrapper type
                    detectedWrapper: If(
                        "object(" in innerRow.value,
                        "object",
                        If(
                            "map(" in innerRow.value,
                            "map",
                            If("optional(" in innerRow.value, "optional", Blank())
                        )
                    ),

                    // Find the parent wrapper by looking for the closest higher-level key
                    parentWrapper: LookUp(
                        topRow.Value,
                        indentLevel < Len(innerRow.value) - Len(Trim(innerRow.value)) &&
                        indentLevel = First(
                            Sort(
                                Filter(
                                    topRow.Value,
                                    indentLevel < Len(innerRow.value) - Len(Trim(innerRow.value))
                                ),
                                indentLevel,
                                SortOrder.Descending
                            )
                        ).indentLevel,
                        key
                    )
                },
                {
                    // Extract and include all necessary fields
                    sectionName: First(topRow.Value).sectionName,
                    indentLevel: indentLevel,
                    key: key,
                    value: value,
                    detectedWrapper: detectedWrapper,
                    parentWrapper: parentWrapper
                }
            )
        )
    )
);
